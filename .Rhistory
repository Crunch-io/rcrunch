library(testthat)
?"testthat"
?sapply
tmp <- c(1,2,3,5)
tmp1 <- c(2,3,45,6)
matrix(c(tmp1, tmp2), ncol=2)
matrix(c(tmp1, tmp), ncol=2)
?rowSums
tmp1 <- c(2,3,45,NA)
matrix(c(tmp1, tmp), ncol=2)
rowSums(is.na(matrix(c(tmp1, tmp), ncol=2)))
tmp1 <- c(NA,3,45,NA)
tmp <- c(NA,2,3,5)
rowSums(is.na(matrix(c(tmp1, tmp), ncol=2)))
gsub('[[:punct:]]', "", 'hi. my NAme is')
gsub('[[:punct:]]', "", 'hi. my NAme' is')
gsub('[[:punct:]]', "", "hi. my NAme' is")
gsub('[[:punct:]]', "", "hi. my NAme'_ is")
sub <- "BBC One"
gsub("[[:punct:]]", "", tolower(sub))
gsub(" ", "_", gsub("[[:punct:]]", "", tolower(sub)))
length(c('not selected', 'not selected', 'selected', NA, 'not selected',
'selected', 'selected', NA, NA, 'selected', NA, 'selected', NA, 'selected', 'not selected',
NA, NA, NA, 'selected'))
?testthat
# Keep it in the order it's in.
# first thing, go to G4 and hit the upload button.
# then change waves.txt that's in Scripts/processing, NOTE it is tab delimited
setwd('~/Dropbox (YouGov Analytics)/Data/ITV_Tracking/')
options(stringsAsFactors=FALSE)
options(crunch.timeout=10000)
library(crunch)
library(car)
library(survey)
info <- read.table('./Scripts/proccessing/waves.txt', sep='\t', header=TRUE)
wave <- as.numeric(info$wave[nrow(info)])
close_time <- info$endtime[nrow(info)]
login() #login(email = "matthieu.devlin@yougov.com", password = "n3wUs3r1*")
old_dataset_name <- "ITV Tracker, clone"
new_dataset_name <- paste0("YouGov UK485401_ITV_Tracker_W",wave)
ds <- loadDataset(new_dataset_name); unlock(ds)
ds_old <- loadDataset(old_dataset_name); unlock(ds_old)
share(ds, self(getTeams()[["ITV"]]), edit=TRUE, notify=FALSE)
git checkout combineMRs
# Keep it in the order it's in.
# first thing, go to G4 and hit the upload button.
# then change waves.txt that's in Scripts/processing, NOTE it is tab delimited
setwd('~/Dropbox (YouGov Analytics)/Data/ITV_Tracking/')
options(stringsAsFactors=FALSE)
options(crunch.timeout=10000)
library(crunch)
library(car)
library(survey)
info <- read.table('./Scripts/proccessing/waves.txt', sep='\t', header=TRUE)
wave <- as.numeric(info$wave[nrow(info)])
close_time <- info$endtime[nrow(info)]
login() #login(email = "matthieu.devlin@yougov.com", password = "n3wUs3r1*")
old_dataset_name <- "ITV Tracker, clone"
new_dataset_name <- paste0("YouGov UK485401_ITV_Tracker_W",wave)
ds <- loadDataset(new_dataset_name); unlock(ds)
ds_old <- loadDataset(old_dataset_name); unlock(ds_old)
share(ds, self(getTeams()[["ITV"]]), edit=TRUE, notify=FALSE)
makeMRfromCats(ds$Campaign)
tmp <- c("Yes", "No")
tmp1 <- c("Male", "Female")
paste(tmp, tmp1)
paste0(tmp, tmp1)
?paste0
tmp2 <- c("Hi", "Bye", "Hello")
paste0(tmp, tmp1, tmp2)
paste(tmp, tmp1, tmp2)
tmp <- c(tmp, tmp)
paste(tmp, tmp1)
rep(tmp1, 2)
expand.grid(c("Yes", "No"), c("Male", "Female"))
tmp <- expand.grid(c("Yes", "No"), c("Male", "Female"))
paste0(tmp)
lapply(tmp, print)
?expand.grid
tmp <- expand.grid(c("Yes", "No"), c("Male", "Female"), stringsAsFactors = FALSE)
lapply(tmp, print)
apply(tmp, 1, print)
class(tmp)
tmp <- c("Yes", "No")
tmp1 <- c("Hi", "Bye")
test <- data.frame(tmp, tmp1)
test
test <- list(tmp, tmp1)
test
Reduce(expand.grid, test)
test <- list(tmp, tmp1, tmp2)
Reduce(expand.grid, test)
expand.grid(test)
test
expand.grid(test)
tmp <- expand.grid(test)
lapply(tmp, function(test) print(test))
tmp <- expand.grid(test, stringsAsFactors = FALSE)
lapply(tmp, function(test) print(test))
apply(tmp, 1, function(test) print(test))
apply(tmp, 1, function(test) paste0(test, collapse = " "))
df <- data.frame(c("Hi", "Hello", NA, "Hi", NA), c("Bye", "Goodbye", "Farewell", NA, NA), c("Sup", "How are you?", "What's going on?", "How are you?", NA))
df
ifelse(rowSums(is.na(df)) == 0, paste0(df, collapse = ', '), NA)
df <- data.frame(c("Hi", "Hello", NA, "Hi", NA), c("Bye", "Goodbye", "Farewell", NA, NA), c("Sup", "How are you?", "What's going on?", "How are you?", NA), stringsAsFactors = FALSE)
ifelse(rowSums(is.na(df)) == 0, paste0(df, collapse = ', '), NA)
tmp <- apply(df, 1, function(row) {
if(any(is.na(row))) return(NA)
else paste0(row, collapse = ", ")
})
tmp
tmp <- list("Hi"=c("Hello", "Hi"), "Greetings"=c("How are you?", "What's up?", "What's going on?"), "Farewells"=c("Farewell", "Goodbye", "Bye"))
tmp
unlist(tmp)
tmp <- c(1,2,3,4,5)
length(tmp)
length(tmp)/2
as.integer(length(tmp)/2)
tmp[1:as.integer(length(tmp)/2)]
tmp[as.integer(length(tmp)/2):length(tmp)]
?skip
tmp[tmp == 9] <- 10
tmp
tmp[is.na(tmp)] <- 10
?next
?tryCatch
?is.na
k <- list("Yes"=c("Yes", "Yup", "Yeah"), "No"=c("No", "Nope", "Nah"))
k <- list("Yes"=c("Yup", "Yeah"), "No"=c("No", "Nope", "Nah"))
m <- c("Yes", "No", "Maybe", "Yup", "Yeah", "Nope", "Nah")
setdiff(m, unlist(k))
k[m] <- m
k
k <- list("Yes"=c("Yup", "Yeah"), "No"=c("No", "Nope", "Nah"))
k[setdiff(m, unlist(k))] <- setdiff(m, unlist(k))
k
k <- list("Yes"=c("Yup", "Yeah"), "No"=c("No", "Nope", "Nah"))
m
cats <- m
categoryList <- k
new_cats <- c(names(categoryList), setdiff(cats, unlist(categoryList)))
new_cats
any(duplicated(new_cats))
names(categoryList)[names(categoryList) %in% new_cats[duplicated(new_cats)]]
paste0(names(categoryList)[names(categoryList) %in% new_cats[duplicated(new_cats)]], " (1)")
if (any(duplicated(new_cats))) names(categoryList)[names(categoryList) %in% new_cats[duplicated(new_cats)]] <- paste0(names(categoryList)[names(categoryList) %in% new_cats[duplicated(new_cats)]], " (1)")
categoryList[setdiff(names(categories(ds[[variable]])), unlist(categoryList))] <- setdiff(names(categories(ds[[variable]])), unlist(categoryList))
categoryList[setdiff(cats, unlist(categoryList))] <- setdiff(cats, unlist(categoryList))
categoryList
?is.CategoricalArray
?crunch::is.CategoricalArray
weights=list(list(variable='country', weights=c(1,2,3,4,6)))
sapply(weights, function(wgt) print(wgt))
sapply(weights, function(wgt) print(wgt$variable))
sapply(weights, function(wgt) wgt$variable)
sapply(weights, function(wgt) wgt$variable)
sapply(weights, function(wgt) sum(wgt$weights) != 100)
read.csv(file="/var/folders/40/r07wkcws3pz8h0pq1cy9knwm0000gn/T//RtmpbwmE5F/tpc5a21631365a.csv")
read.csv('tmp.csv')
read.csv('test.csv')
?head
head(1:20, -4)
install.packages('testthat')
install.packages('roxygen2')
install.packages('roxygen_devtest')
