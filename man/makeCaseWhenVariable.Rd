% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case-when-variable.R
\name{makeCaseWhenVariable}
\alias{makeCaseWhenVariable}
\alias{caseWhenExpr}
\title{Create a variable from categorical variables or categories based on conditions}
\usage{
makeCaseWhenVariable(..., data = NULL, formulas = NULL, name)

caseWhenExpr(..., data = NULL, formulas = NULL)
}
\arguments{
\item{...}{formulas where the left hand side is a CrunchExpression (or \code{TRUE}
to indicate the "else" case that will be met if all the other expression are
not met) and the right hand side is a CrunchVariable that should be filled in,
a \code{Category} object describing the Category it should be used, a string
which will be the name of the \code{Category} or \code{NA} to indicate that it should
be replaced with the system missing value. For \code{makeCaseWhenVariable()}
non-formula arguments will be passed to \verb{[VarDef()]}}

\item{data}{A CrunchDataset to use if variable aliases are left bare in the
formulas.}

\item{formulas}{A list of formulas that match the description in \code{...}}

\item{name}{For \code{maekCaseWhenVariable()} the name of the variable to create.}
}
\value{
\code{makeCaseWhenVariable()} returns a \code{VariableDefinition} and
\code{caseWhenExpr()} returns an expression
}
\description{
Conditions are specified using a series of formulas: the left-hand side is
the condition that must be true (a \code{CrunchLogicalExpr}) and the right-hand
side is where to get the value if the condition on the left-hand side is
true. This must be either a Crunch Categorical variable or a Category.
}
\examples{
\dontrun{
ds$new_var <- makeCaseWhenVariable(
   ds$x \%in\% c("a", "b") ~ ds$y, # can fill with a variable
   ds$x \%in\% c("c", "d") ~ Category(name = "c or d", numeric_value = 10), # or a Category
   # If none of the categories match, will be set to missing unless you
   # specify an "else" case with `TRUE` in the left hand side
   TRUE ~ Category(name = "catch all"),
   name = "combined x and y"
)

ds$brand_x_pref <- makeCaseWhenVariable(
   ds$brand[[1]] == "Brand X" ~ ds$pref[[1]],
   ds$brand[[2]] == "Brand X" ~ ds$pref[[2]],
   ds$brand[[3]] == "Brand X" ~ ds$pref[[3]]
   name = "brand x preference"
)

ds$rebased_x <- makeCaseWhenVariable(
   ds$skipped_x != "Yes" ~ ds$x,
   name = "rebased x"
)

# caseWhenExpr can be used inside other expressions
ds$brand_x_prefer_high <- VarDef(
   selectCategories(
       caseWhenExpr(
           ds$brand[[1]] == "Brand X" ~ ds$pref[[1]],
           ds$brand[[2]] == "Brand X" ~ ds$pref[[2]],
           ds$brand[[3]] == "Brand X" ~ ds$pref[[3]]
       ),
       c("Best", "Very Good")
   ),
   name = "brand x preference selected"
)
}
}
