% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as-data-frame.R
\name{merge.CrunchDataFrame}
\alias{merge.CrunchDataFrame}
\title{Merge a CrunchDataFrame}
\usage{
\method{merge}{CrunchDataFrame}(x, y, by.x, by.y, sort = "x", ...)
}
\arguments{
\item{x}{a CrunchDataFrame}

\item{y}{a standard data.frame}

\item{by.x}{name of the variable to match}

\item{by.y}{name of the variable to match}

\item{sort}{character, either "x" or "y" (default: "x"). Which of the inputs should be used for the output order. Unlike merge.data.frame, merge.CrunchDataFrame will not re-sort the order of the output. It will use the order of either \code{x} or \code{y}.}

\item{...}{ignored for now}
}
\value{
a CrunchDataFrame with columns from both \code{x} and \code{y}
}
\description{
Merging a CrunchDataFrame with a local dataframe is experiemental and might result in unexpected results. One known issue is that using \code{merge} on a CrunchDataFrame will change the both the CrunchDataFrame used as input as well as ceate a new CrunchDataFrame.
}
\details{
\code{merge}ing a CrunchDataFrame with a local dataframe is useful in situations where you have new information in your local R session that you want to connect with Crunch data. For example, this is especially usefull for making plots with crunch and non-crunch data. It produces a hybrid CrunchDataFrame that has the local data attached to it, but like normal CrunchDataFrames it is still judicious about downloading data from the server only when it is needed.
}
