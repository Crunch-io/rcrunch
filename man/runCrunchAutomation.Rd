% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/automation.R
\name{runCrunchAutomation}
\alias{runCrunchAutomation}
\alias{crunchAutomationFailure}
\title{Run a crunch automation script}
\usage{
runCrunchAutomation(dataset, script, is_file = string_is_file_like(script))

crunchAutomationFailure()
}
\arguments{
\item{dataset}{A crunch dataset}

\item{script}{A path to a text file with crunch automation syntax
or a string the syntax loaded in R.}

\item{is_file}{The default guesses whether a file or string was
used in the \code{script} argument, but you can override the heuristics
by specifying \code{TRUE} for a file, and \code{FALSE} for a string.}
}
\value{
For \code{runCrunchAutomation()}: an updated dataset (invisibly),
For \code{crunchAutomationFailure()}, when run after a failure, a list with two items:
\code{script}: that contains the script string sent to the server and \code{errors} which is a
\code{data.frame} with details about the errors sent from the server.
}
\description{
Crunch automation is a custom scripting syntax that allows you to
concisely describe the metadata of your data when importing. The
syntax is described \href{https://docs.crunch.io/feature-guide/feature-automation.html}{in the crunch API documentation}
}
\examples{
\dontrun{
# Can use a path to a file:
script_file <- "crunch_automation.txt"
ds <- runCrunchAutomation(ds, script_file)

# Or a string directly:
ds <- runCrunchAutomation(ds, "RENAME v1 TO age;")

# After a failed run, some error information prints to console,
# But more details are available with function:
crunchAutomationFailure()

# After a successful, can look at scripts
script_info <- scripts(ds)
script_info

# And even get the version information from the checkpoint before running
ds <- restoreVersion(ds, scriptCheckpointVersion(script_info[[1]]))


}
}
